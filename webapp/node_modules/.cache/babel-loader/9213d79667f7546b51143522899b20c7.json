{"ast":null,"code":"export default {\n  name: 'sliders_area',\n\n  data() {\n    return {\n      pumpvals: [20, 20, 15, 15, 15, 15],\n      pumpvalscopy: [20, 20, 15, 15, 15, 15],\n      roundedPumpVals: [20, 20, 15, 15, 15, 15],\n      enablepump: [true, true, true, true, true, true]\n    };\n  },\n\n  methods: {\n    normalizeVals: function (index) {\n      console.log(\"Before values of pumpvals: \" + this.pumpvals[0] + \" \" + this.pumpvals[1] + \" \" + this.pumpvals[2] + \" \" + this.pumpvals[3] + \" \" + this.pumpvals[4] + \" \" + this.pumpvals[5]);\n      let absDiff = this.pumpvals[index] - this.pumpvalscopy[index];\n      let currPump = index;\n      let nActivePumps = 0;\n\n      if (this.pumpvals[index] > 1) {\n        this.enablepump[index] = true;\n      }\n\n      for (let i in this.enablepump) {\n        //compute num of active pumps\n        if (this.enablepump[i]) {\n          nActivePumps++;\n        }\n      }\n\n      let DiffPerPump = -1 * (absDiff / (nActivePumps - 1));\n\n      for (var i = 0; i < this.pumpvals.length; i++) {\n        if (this.enablepump[i] && i != index) {\n          let x = this.pumpvals[i] + Math.round(DiffPerPump);\n\n          if (x < 0.5) {\n            this.enablepump[i] = false;\n          } //disable pumps with val < 0.5, if x>= 0.5 it is rounded up to 1\n\n\n          this.pumpvals[i] = x <= 0 ? 0 : x;\n        }\n      }\n\n      nActivePumps = 0;\n\n      for (let i in this.enablepump) {\n        //compute num of the current active pumps\n        if (this.enablepump[i]) {\n          nActivePumps++;\n        }\n      }\n\n      let sum = 0;\n\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        //get sum of pumpvals\n        sum += this.pumpvals[i] * 1;\n      }\n\n      let sumDiff = sum - 100; // check if the new sum is bigger than 100\n\n      let newDiffPer = sumDiff / nActivePumps;\n\n      for (let i in this.enablepump) {\n        //subtract the diff to 100, so the sum of all vals equal to 100\n        if (this.enablepump[i]) {\n          this.pumpvals[i] -= newDiffPer;\n        }\n      }\n\n      let newSum = 0;\n\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        newSum += this.pumpvals[i] * 1;\n      }\n\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        //update pumpvalscopy\n        this.pumpvalscopy[i] = this.pumpvals[i];\n      }\n\n      console.log(this.enablepump[0] + \" \" + this.enablepump[1] + \" \" + this.enablepump[2] + \" \" + this.enablepump[3] + \" \" + this.enablepump[4] + \" \" + this.enablepump[5]);\n      console.log(\"absDiff: \" + absDiff + \"\\ncurrPump: \" + currPump + \"\\nnActivePumps: \" + nActivePumps + \"\\nDiffPerPump: \" + DiffPerPump + \"\\nsum: \" + sum + \"\\nnewSum: \" + newSum);\n      console.log(\"After the function: \" + this.pumpvalscopy[0] + \" \" + this.pumpvalscopy[1] + \" \" + this.pumpvalscopy[2] + \" \" + this.pumpvalscopy[3] + \" \" + this.pumpvalscopy[4] + \" \" + this.pumpvalscopy[5]);\n      console.log(\" \");\n    },\n    roundVals: function () {\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        this.roundedPumpVals[i] = this.pumpvals[i].toFixed(0);\n      }\n    },\n    changeCheckBox: function (index) {\n      this.enablepump[index] = !this.enablepump[index];\n\n      if (!this.enablepump[index]) {\n        this.pumpvals[index] = 0;\n      }\n    },\n    passNewVal: function (index) {\n      //pass new roundedVal to pumpvals, otherwise \"normalizeVals()\" doesnt work or new val in number input isnt updated\n      this.pumpvals[index] = this.roundedPumpVals[index];\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","pumpvals","pumpvalscopy","roundedPumpVals","enablepump","methods","normalizeVals","index","console","log","absDiff","currPump","nActivePumps","i","DiffPerPump","length","x","Math","round","sum","sumDiff","newDiffPer","newSum","roundVals","toFixed","changeCheckBox","passNewVal"],"sourceRoot":"","sources":["/Users/mehmettasdemir/Desktop/OneDrive/Studium/SS2022/Multimediasysteme/dionysus-bartender/webapp/src/components/sliders.vue"],"sourcesContent":["<template>\n    <div id=\"slider-area-container\">\n    <div id=\"pump1\">Pumpe 1\n      <span class=\"pump1-slider-area\">\n        <input type=\"range\" min=\"0\" max=\"100\"  class=\"\" id=\"slider-pump1\" v-model.number=\"pumpvals[0]\" @change=\"normalizeVals(0); roundVals()\">\n\t\t\t\t<input  type=\"number\" min=\"0\" max=\"100\" class=\"input-slider\" id=\"input-pump1\" v-model.number=\"roundedPumpVals[0]\" @change=\"passNewVal(0); normalizeVals(0); roundVals()\">\n      </span>\n    </div>\n    <div id=\"pump2\">Pumpe 2\n      <span class=\"pump2-slider-area\">\n        <input type=\"range\" min=\"0\" max=\"100\" class=\"\" id=\"slider-pump2\" v-model.number=\"pumpvals[1]\" @change=\"normalizeVals(1); roundVals()\">\n\t\t\t\t<input  type=\"number\" min=\"0\" max=\"100\" class=\"input-slider\" id=\"input-pump2\" v-model.number=\"roundedPumpVals[1]\" @change=\"passNewVal(1); normalizeVals(1); roundVals()\">\n      </span>\n    </div>\n    <div id=\"pump3\">Pumpe 3\n      <span class=\"pump3-slider-area\">\n        <input type=\"range\" min=\"0\" max=\"100\" class=\"\" id=\"slider-pump3\" v-model.number=\"pumpvals[2]\" @change=\"normalizeVals(2); roundVals()\">\n\t\t\t\t<input  type=\"number\" min=\"0\" max=\"100\" class=\"input-slider\" id=\"input-pump3\" v-model.number=\"roundedPumpVals[2]\" @change=\"passNewVal(2); normalizeVals(2); roundVals()\">\n      </span>\n    </div>\n    <div id=\"pump4\">Pumpe 4\n      <span class=\"pump4-slider-area\">\n        <input type=\"range\" min=\"0\" max=\"100\" class=\"\" id=\"slider-pump4\" v-model.number=\"pumpvals[3]\" @change=\"normalizeVals(3); roundVals()\">\n\t\t\t\t<input  type=\"number\" min=\"0\" max=\"100\" class=\"input-slider\" id=\"input-pump4\" v-model.number=\"roundedPumpVals[3]\" @change=\"passNewVal(3); normalizeVals(3); roundVals()\">\n      </span>\n    </div>\n    <div id=\"pump5\">Pumpe 5\n      <span class=\"pump5-slider-area\">\n        <input type=\"range\" min=\"0\" max=\"100\" class=\"\" id=\"slider-pump5\" v-model.number=\"pumpvals[4]\" @change=\"normalizeVals(4); roundVals()\">\n\t\t\t\t<input  type=\"number\" min=\"0\" max=\"100\" class=\"input-slider\" id=\"input-pump5\" v-model.number=\"roundedPumpVals[4]\" @change=\"passNewVal(4); normalizeVals(4); roundVals()\">\n      </span>\n    </div>\n    <div id=\"pump6\">Pumpe 6\n      <span class=\"pump6-slider-area\">\n        <input type=\"range\" min=\"0\" max=\"100\" class=\"\" id=\"slider-pump6\" v-model.number=\"pumpvals[5]\" @change=\"normalizeVals(5); roundVals()\">\n\t\t\t\t<input  type=\"number\" min=\"0\" max=\"100\" class=\"input-slider\" id=\"input-pump6\" v-model.number=\"roundedPumpVals[5]\" @change=\"passNewVal(5); normalizeVals(5); roundVals()\">\n      </span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default{\n    name: 'sliders_area',\n    data(){\n      return{\n        pumpvals: [20,20,15,15,15,15],\n        pumpvalscopy: [20, 20, 15, 15, 15, 15],\n        roundedPumpVals:[20,20,15,15,15,15],\n        enablepump: [true, true, true, true, true, true]\n      }\n    },\n    \n    methods:{\n        normalizeVals: function(index){\n        console.log(\"Before values of pumpvals: \" + this.pumpvals[0] + \" \" + this.pumpvals[1] + \" \" + this.pumpvals[2] + \" \" + this.pumpvals[3] + \" \" + this.pumpvals[4] + \" \" + this.pumpvals[5])\n          let absDiff = this.pumpvals[index] - this.pumpvalscopy[index];\n          let currPump = index;\n          let nActivePumps = 0;\n\n          if(this.pumpvals[index] > 1){this.enablepump[index] = true} \n\n          for(let i in this.enablepump){ //compute num of active pumps\n            if(this.enablepump[i]){\n              nActivePumps++;\n            }\n          }\n          let DiffPerPump = (-1) * (absDiff/(nActivePumps-1));\n\n          for(var i = 0; i < this.pumpvals.length; i++){\n            if(this.enablepump[i] && i != index){\n              let x = this.pumpvals[i] + Math.round(DiffPerPump);\n              if(x< 0.5){ this.enablepump[i] = false} //disable pumps with val < 0.5, if x>= 0.5 it is rounded up to 1\n              this.pumpvals[i] = x <= 0 ? 0:x;\n            }\n          }\n\n          nActivePumps = 0;\n          for(let i in this.enablepump){ //compute num of the current active pumps\n            if(this.enablepump[i]){\n              nActivePumps++;\n            }\n          }\n\n          let sum = 0;\n          for(let i = 0; i < this.pumpvals.length; i++){ //get sum of pumpvals\n            sum += this.pumpvals[i]*1;\n          }\n\n          let sumDiff = sum - 100; // check if the new sum is bigger than 100\n          let newDiffPer = sumDiff/nActivePumps;\n\n          for(let i in this.enablepump){ //subtract the diff to 100, so the sum of all vals equal to 100\n            if(this.enablepump[i]){\n              this.pumpvals[i] -= newDiffPer;\n            }\n          }\n\n          let newSum = 0;\n          for(let i = 0; i < this.pumpvals.length; i++){\n            newSum += this.pumpvals[i]*1;\n          }\n        \n\n          for (let i = 0; i < this.pumpvals.length; i++){ //update pumpvalscopy\n            this.pumpvalscopy[i] = this.pumpvals[i]\n          }\n          \n          console.log(this.enablepump[0] + \" \" + this.enablepump[1] + \" \" + this.enablepump[2] + \" \" + this.enablepump[3] + \" \" + this.enablepump[4] + \" \" + this.enablepump[5])\n          console.log(\"absDiff: \" + absDiff + \"\\ncurrPump: \" + currPump +  \"\\nnActivePumps: \" + nActivePumps + \"\\nDiffPerPump: \" + DiffPerPump + \"\\nsum: \" + sum + \"\\nnewSum: \" + newSum);\n          console.log(\"After the function: \" + this.pumpvalscopy[0] + \" \" + this.pumpvalscopy[1] + \" \" + this.pumpvalscopy[2] + \" \" + this.pumpvalscopy[3] + \" \" + this.pumpvalscopy[4] + \" \" + this.pumpvalscopy[5]);\n          console.log(\" \");\n        },\n        roundVals: function(){\n          for (let i = 0; i < this.pumpvals.length; i++){\n            this.roundedPumpVals[i] = this.pumpvals[i].toFixed(0)\n          }\n        },\n        changeCheckBox: function(index){\n          this.enablepump[index] = !this.enablepump[index]\n          if(!this.enablepump[index]){\n            this.pumpvals[index] = 0;\n          }\n        },\n        passNewVal: function(index){ //pass new roundedVal to pumpvals, otherwise \"normalizeVals()\" doesnt work or new val in number input isnt updated\n          this.pumpvals[index] = this.roundedPumpVals[index]\n        }\n    }\n  \n}\n\n</script>\n\n\n<style scoped>\n#slider-area-container{\n  background-color:powderblue;\n  font-size: 0.7em;\n  display:flex;\n  flex-direction: column;\n  grid-area: slider;\n  justify-content: space-around;\n  align-items: flex-start;\n  padding: 0.4em;\n  gap: 0.3em;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n  \n}\ninput[type = \"number\"]{\n  width:2.5em\n}\n</style>"]},"metadata":{},"sourceType":"module"}