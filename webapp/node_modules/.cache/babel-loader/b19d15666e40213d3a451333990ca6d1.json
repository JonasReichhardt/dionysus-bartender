{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"sliders\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, [/*#__PURE__*/_createTextVNode(\"Choose a drink size: \"), /*#__PURE__*/_createElementVNode(\"br\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"150\"\n}, \"150\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"200\"\n}, \"200\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"250\"\n}, \"250\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = [_hoisted_4, _hoisted_5, _hoisted_6];\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\" ml \");\n\nconst _hoisted_9 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_10 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_11 = {\n  class: \"pictures\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.loaded ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"select\", {\n    onChange: _cache[0] || (_cache[0] = $event => $options.drinkSizeChanged($event))\n  }, _hoisted_7, 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_8]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.ingredients, (ing, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: ing\n    }, [_createTextVNode(_toDisplayString(ing) + \" \", 1\n    /* TEXT */\n    ), _createElementVNode(\"span\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      \"onUpdate:modelValue\": $event => $data.pumpvals[index] = $event,\n      onChange: $event => {\n        $options.normalizeVals(index);\n        $options.roundVals();\n      }\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_9), [[_vModelText, $data.pumpvals[index], void 0, {\n      number: true\n    }]]), _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      max: \"100\",\n      \"onUpdate:modelValue\": $event => $data.roundedPumpVals[index] = $event,\n      onChange: $event => {\n        $options.passNewVal(index);\n        $options.normalizeVals(index);\n        $options.roundVals();\n      }\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_10), [[_vModelText, $data.roundedPumpVals[index], void 0, {\n      number: true\n    }]])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cocktails, (cock, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: cock\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => $options.passCockVal(index)\n    }, _toDisplayString(cock.name), 9\n    /* TEXT, PROPS */\n    , _hoisted_12)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.sendCocktailReq())\n  }, \"MOCH MA MEI DRANGL HEAST!!!!!!\")])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;gCAEPC,oBAAyC,OAAzC,EAAyC,IAAzC,EAAyC,+BAAjC,wBAAiC,eAAZA,oBAAI,IAAJ,CAAY,CAAzC;;AAAA;;gCAEEA,oBAAgC,QAAhC,EAAgC;AAAxBC,OAAK,EAAC;AAAkB,CAAhC,EAAoB,KAApB,EAAuB;AAAA;AAAvB;;gCACAD,oBAAyC,QAAzC,EAAyC;AAAjCE,UAAQ,EAAR,EAAiC;AAAxBD,OAAK,EAAC;AAAkB,CAAzC,EAA6B,KAA7B,EAAgC;AAAA;AAAhC;;gCACAD,oBAAgC,QAAhC,EAAgC;AAAxBC,OAAK,EAAC;AAAkB,CAAhC,EAAoB,KAApB,EAAuB;AAAA;AAAvB;;oBAFAE,YACAC,YACAC;;iDACO;;;;;AA6BRN,OAAK,EAAC;;;;AAONA,OAAK,EAAC;;;SA5CgBO,8BAA7BC,oBA+CM,KA/CN,cA+CM,CA9CJP,oBAmCM,KAnCN,cAmCM,CAlCJA,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJQ,UAMI,EALJR,oBAIS,QAJT,EAIS;AAJAS,YAAM,sCAAEC,0BAAiBC,MAAjB,CAAF;AAIN,GAJT;;AAAA,GAKI,aAPN,CAkCI,qBA1BJJ,oBAyBMK,SAzBN,EAyBM,IAzBN,EAyBMC,YAzBsBP,iBAyBtB,EAzBiC,CAA1BQ,GAA0B,EAArBC,KAAqB,KAAhB;yBAAvBR,oBAyBM,KAzBN,EAyBM;AAzBoCS,SAAG,EAAEF;AAyBzC,KAzBN,EAAkD,mCAC7CA,OAAM,KACT;AAAA;KAFgD,EAEhDd,oBAsBO,MAtBP,EAsBO,IAtBP,EAsBO,iBArBLA,oBASE,OATF,EASE;AARAiB,UAAI,EAAC,OAQL;AAPAC,SAAG,EAAC,GAOJ;AANAC,SAAG,EAAC,KAMJ;uCALgBb,eAASS,KAAT,IAAcJ,MAK9B;AAJCF,cAAM;AAAiBC,+BAAcK,KAAd;AAAoCL;;AAI5D,KATF;;AAAA,kCAIkBJ,eAASS,KAAT;cAAhB;QAiBG,kBAXLf,oBAUE,OAVF,EAUE;AATAiB,UAAI,EAAC,QASL;AARAC,SAAG,EAAC,GAQJ;AAPAC,SAAG,EAAC,KAOJ;uCANgBb,sBAAgBS,KAAhB,IAAqBJ,MAMrC;AALCF,cAAM;AAAiBC,4BAAWK,KAAX;AAAiCL,+BAAcK,KAAd;AAAoCL;;AAK7F,KAVF;;AAAA,mCAIkBJ,sBAAgBS,KAAhB;cAAhB;QAOG,CAtBP,CAFgD,CAAlD;GAyBM,CAzBN;;AAAA,GA0BI,EAnCN,CA8CI,EAVJf,oBAMM,KANN,eAMM,oBALJO,oBAIMK,SAJN,EAIM,IAJN,EAIMC,YAJuBP,eAIvB,EAJgC,CAAzBc,IAAyB,EAAnBL,KAAmB,KAAd;yBAAxBR,oBAIM,KAJN,EAIM;AAJmCS,SAAG,EAAEI;AAIxC,KAJN,EAAkD,CAChDpB,oBAES,QAFT,EAES;AAFAqB,aAAK,YAAEX,qBAAYK,KAAZ;AAEP,KAFT,mBACKK,IAAI,CAACE,KADV,EACc;AAAA;AADd,MACcC,WADd,CADgD,CAAlD;GAIM,CAJN;;AAAA,GAKI,EANN,CAUI,EAHJvB,oBAEM,KAFN,eAEM,CADJA,oBAA0E,QAA1E,EAA0E;AAAjEqB,WAAK,sCAAEX,0BAAF;AAA4D,GAA1E,EAAmC,gCAAnC,CACI,CAFN,CAGI,CA/CN","names":["class","_createElementVNode","value","selected","_hoisted_4","_hoisted_5","_hoisted_6","$data","_createElementBlock","_hoisted_3","onChange","$options","$event","_Fragment","_renderList","ing","index","key","type","min","max","cock","onClick","name","_hoisted_12"],"sourceRoot":"","sources":["/Users/mehmettasdemir/Desktop/OneDrive/Studium/SS2022/Multimediasysteme/dionysus-bartender/webapp/src/components/DionysusApp.vue"],"sourcesContent":["<template>\n  <div class=\"container\" v-if=\"loaded\">\n    <div class=\"sliders\">\n      <div>\n        <label >Choose a drink size: <br></label>\n        <select @change=\"drinkSizeChanged($event)\">\n          <option value=\"150\">150</option>\n          <option selected value=\"200\">200</option>\n          <option value=\"250\">250</option>\n        </select> ml\n      </div>\n      <div v-for=\"(ing, index) in ingredients\" :key=\"ing\">\n        {{ ing }}\n        <span>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            v-model.number=\"pumpvals[index]\"\n            @change=\"\n              normalizeVals(index);\n              roundVals();\n            \"\n          />\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            v-model.number=\"roundedPumpVals[index]\"\n            @change=\"\n              passNewVal(index);\n              normalizeVals(index);\n              roundVals();\n            \"\n          />\n        </span>\n      </div>\n    </div>\n    <div class=\"pictures\">\n      <div v-for=\"(cock, index) in cocktails\" :key=\"cock\">\n        <button @click=\"passCockVal(index)\">\n          {{ cock.name }}\n        </button>\n      </div>\n    </div>\n    <div class=\"buttons\">\n      <button @click=\"sendCocktailReq()\">MOCH MA MEI DRANGL HEAST!!!!!!</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DionysusApp\",\n  data() {\n    return {\n      pumpvals: null,\n      pumpvalscopy: null,\n      roundedPumpVals: null,\n      enablepump: null,\n      ingredients: null,\n      loaded: false,\n      cocktails: null,\n      selectedCocktail: null,\n      selectedSize: 200\n    };\n  },\n  created: async function () {\n    let ingResponse = await fetch(\"http://192.168.0.129:8081/ingredients\");\n\n    if (ingResponse.ok) {\n      this.ingredients = await ingResponse.json();\n      let initialVal = 100 / this.ingredients.length;\n      this.pumpvals = Array(this.ingredients.length).fill(initialVal);\n      this.pumpvalscopy = this.pumpvals.map((x) => x);\n      this.roundedPumpVals = this.pumpvals.map((x) => x.toFixed(0));\n      this.enablepump = Array(this.ingredients.length).fill(true);\n    } else {\n      alert(\"HTTP-Error: \" + ingResponse.status);\n      return;\n    }\n\n    let cocktailsResponse = await fetch(\"http://192.168.0.129:8081/cocktails\");\n\n    if (cocktailsResponse.ok) {\n      this.cocktails = await cocktailsResponse.json();\n    } else {\n      alert(\"HTTP-Error: \" + cocktailsResponse.status);\n      return;\n    }\n\n    this.loaded = true;\n  },\n  methods: {\n    normalizeVals: function (index) {\n      let absDiff = this.pumpvals[index] - this.pumpvalscopy[index];\n      let currPump = index;\n      let nActivePumps = 0;\n\n      if (this.pumpvals[index] > 1) {\n        this.enablepump[index] = true;\n      }\n\n      for (let i in this.enablepump) {\n        //compute num of active pumps\n        if (this.enablepump[i]) {\n          nActivePumps++;\n        }\n      }\n      let DiffPerPump = -1 * (absDiff / (nActivePumps - 1));\n\n      for (var i = 0; i < this.pumpvals.length; i++) {\n        if (this.enablepump[i] && i != index) {\n          let x = this.pumpvals[i] + Math.round(DiffPerPump);\n          if (x < 0.5) {\n            this.enablepump[i] = false;\n          } //disable pumps with val < 0.5, if x>= 0.5 it is rounded up to 1\n          this.pumpvals[i] = x <= 0 ? 0 : x;\n        }\n      }\n\n      nActivePumps = 0;\n      for (let i in this.enablepump) {\n        //compute num of the current active pumps\n        if (this.enablepump[i]) {\n          nActivePumps++;\n        }\n      }\n\n      let sum = 0;\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        //get sum of pumpvals\n        sum += this.pumpvals[i] * 1;\n      }\n\n      let sumDiff = sum - 100; // check if the new sum is bigger than 100\n      let newDiffPer = sumDiff / nActivePumps;\n\n      for (let i in this.enablepump) {\n        //subtract the diff to 100, so the sum of all vals equal to 100\n        if (this.enablepump[i]) {\n          this.pumpvals[i] -= newDiffPer;\n        }\n      }\n\n      let newSum = 0;\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        newSum += this.pumpvals[i] * 1;\n      }\n\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        //update pumpvalscopy\n        this.pumpvalscopy[i] = this.pumpvals[i];\n      }\n      console.log(this.pumpvals);\n      console.log(\"rounded: \" + this.roundedPumpVals);\n\n      console.log(\n        \"absDiff: \" +\n          absDiff +\n          \"\\ncurrPump: \" +\n          currPump +\n          \"\\nnActivePumps: \" +\n          nActivePumps +\n          \"\\nDiffPerPump: \" +\n          DiffPerPump +\n          \"\\nsum: \" +\n          sum +\n          \"\\nnewSum: \" +\n          newSum\n      );\n    },\n    roundVals: function () {\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        this.roundedPumpVals[i] = this.pumpvals[i].toFixed(0);\n      }\n    },\n    changeCheckBox: function (index) {\n      this.enablepump[index] = !this.enablepump[index];\n      if (!this.enablepump[index]) {\n        this.pumpvals[index] = 0;\n      }\n    },\n    passNewVal: function (index) {\n      //pass new roundedVal to pumpvals, otherwise \"normalizeVals()\" doesnt work or new val in number input isnt updated\n      this.pumpvals[index] = this.roundedPumpVals[index];\n    },\n    passCockVal: function (index) {\n      let ctail = this.cocktails[index];\n      let ctailIng = [];\n      ctail.ingredients.forEach((ing) => {\n        ctailIng.push(ing.name);\n      });\n\n      let amounts = [];\n      ctail.ingredients.forEach((ing) => {\n        amounts.push(ing.amount);\n      });\n\n      let amount = amounts.reduce((a, b) => a + b);\n\n      for (let i = 0; i < ctail.ingredients.length; i++) {\n        for (let j = 0; j < this.ingredients.length; j++) {\n          if (ctail.ingredients[i].name == this.ingredients[j]) {\n            this.pumpvals[j] = (amounts[i] / amount) * 100;\n          }\n        }\n      }\n\n      for (let i = 0; i < this.ingredients.length; i++) {\n        if (!ctailIng.includes(this.ingredients[i])) {\n          this.enablepump[i] = false;\n          this.pumpvals[i] = 0;\n        }\n      }\n      this.roundVals();\n      this.selectedCocktail = index;\n    },\n    sendCocktailReq: function () {\n      let cockName = this.cocktails[this.selectedCocktail].name\n        .replace(/\\s+/g, \"\")\n        .toLowerCase();\n      fetch(\"http://192.168.0.129:8081/cocktails/\" + cockName, {\n        method: \"post\",\n      }).then((response) => {\n        console.log(response);\n      });\n    },\n    drinkSizeChanged: function($event){\n      this.selectedSize = $event.target.options[$event.target.options.selectedIndex].text;\n      console.log(this.selectedSize + 2)\n    }\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.container {\n  display: grid;\n  width: 100vw;\n  height: 100vh;\n  grid-auto-columns: minmax(0, 1fr);\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 85% 1fr;\n  grid-template-areas:\n    \"slider pictures\"\n    \"slider pictures\"\n    \"buttons buttons\";\n  gap: 5px;\n  padding: 5px;\n  box-sizing: border-box;\n}\n.sliders {\n  grid-area: slider;\n  background-color: powderblue;\n  font-size: 0.7em;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: flex-start;\n  padding: 0.4em;\n  gap: 0.3em;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n}\n.sliders input[type=\"number\"] {\n  width: 2.5em;\n}\n.pictures {\n  grid-area: pictures;\n}\n.buttons {\n  grid-area: buttons;\n  background-color: green;\n}\n.container div {\n  font-size: 0.7em;\n  padding: 0.1em;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}