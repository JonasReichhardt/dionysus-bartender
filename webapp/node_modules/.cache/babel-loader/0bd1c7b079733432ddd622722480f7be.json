{"ast":null,"code":"export default {\n  name: \"DionysusApp\",\n\n  data() {\n    return {\n      pumpvals: null,\n      pumpvalscopy: null,\n      roundedPumpVals: null,\n      enablepump: null,\n      ingredients: null,\n      loaded: false,\n      cocktails: null,\n      selectedCocktail: null,\n      selectedSize: 200\n    };\n  },\n\n  created: async function () {\n    let ingResponse = await fetch(\"http://192.168.0.129:8081/ingredients\");\n\n    if (ingResponse.ok) {\n      this.ingredients = await ingResponse.json();\n      let initialVal = 100 / this.ingredients.length;\n      this.pumpvals = Array(this.ingredients.length).fill(initialVal);\n      this.pumpvalscopy = this.pumpvals.map(x => x);\n      this.roundedPumpVals = this.pumpvals.map(x => x.toFixed(0));\n      this.enablepump = Array(this.ingredients.length).fill(true);\n    } else {\n      alert(\"HTTP-Error: \" + ingResponse.status);\n      return;\n    }\n\n    let cocktailsResponse = await fetch(\"http://192.168.0.129:8081/cocktails\");\n\n    if (cocktailsResponse.ok) {\n      this.cocktails = await cocktailsResponse.json();\n    } else {\n      alert(\"HTTP-Error: \" + cocktailsResponse.status);\n      return;\n    }\n\n    this.loaded = true;\n  },\n  methods: {\n    normalizeVals: function (index) {\n      let absDiff = this.pumpvals[index] - this.pumpvalscopy[index];\n      let currPump = index;\n      let nActivePumps = 0;\n\n      if (this.pumpvals[index] > 1) {\n        this.enablepump[index] = true;\n      }\n\n      for (let i in this.enablepump) {\n        //compute num of active pumps\n        if (this.enablepump[i]) {\n          nActivePumps++;\n        }\n      }\n\n      let DiffPerPump = -1 * (absDiff / (nActivePumps - 1));\n\n      for (var i = 0; i < this.pumpvals.length; i++) {\n        if (this.enablepump[i] && i != index) {\n          let x = this.pumpvals[i] + Math.round(DiffPerPump);\n\n          if (x < 0.5) {\n            this.enablepump[i] = false;\n          } //disable pumps with val < 0.5, if x>= 0.5 it is rounded up to 1\n\n\n          this.pumpvals[i] = x <= 0 ? 0 : x;\n        }\n      }\n\n      nActivePumps = 0;\n\n      for (let i in this.enablepump) {\n        //compute num of the current active pumps\n        if (this.enablepump[i]) {\n          nActivePumps++;\n        }\n      }\n\n      let sum = 0;\n\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        //get sum of pumpvals\n        sum += this.pumpvals[i] * 1;\n      }\n\n      let sumDiff = sum - 100; // check if the new sum is bigger than 100\n\n      let newDiffPer = sumDiff / nActivePumps;\n\n      for (let i in this.enablepump) {\n        //subtract the diff to 100, so the sum of all vals equal to 100\n        if (this.enablepump[i]) {\n          this.pumpvals[i] -= newDiffPer;\n        }\n      }\n\n      let newSum = 0;\n\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        newSum += this.pumpvals[i] * 1;\n      }\n\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        //update pumpvalscopy\n        this.pumpvalscopy[i] = this.pumpvals[i];\n      }\n\n      console.log(this.pumpvals);\n      console.log(\"rounded: \" + this.roundedPumpVals);\n      console.log(\"absDiff: \" + absDiff + \"\\ncurrPump: \" + currPump + \"\\nnActivePumps: \" + nActivePumps + \"\\nDiffPerPump: \" + DiffPerPump + \"\\nsum: \" + sum + \"\\nnewSum: \" + newSum);\n    },\n    roundVals: function () {\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        this.roundedPumpVals[i] = this.pumpvals[i].toFixed(0);\n      }\n    },\n    changeCheckBox: function (index) {\n      this.enablepump[index] = !this.enablepump[index];\n\n      if (!this.enablepump[index]) {\n        this.pumpvals[index] = 0;\n      }\n    },\n    passNewVal: function (index) {\n      //pass new roundedVal to pumpvals, otherwise \"normalizeVals()\" doesnt work or new val in number input isnt updated\n      this.pumpvals[index] = this.roundedPumpVals[index];\n    },\n    passCockVal: function (index) {\n      let ctail = this.cocktails[index];\n      let ctailIng = [];\n      ctail.ingredients.forEach(ing => {\n        ctailIng.push(ing.name);\n      });\n      let amounts = [];\n      ctail.ingredients.forEach(ing => {\n        amounts.push(ing.amount);\n      });\n      let amount = amounts.reduce((a, b) => a + b);\n\n      for (let i = 0; i < ctail.ingredients.length; i++) {\n        for (let j = 0; j < this.ingredients.length; j++) {\n          if (ctail.ingredients[i].name == this.ingredients[j]) {\n            this.pumpvals[j] = amounts[i] / amount * 100;\n          }\n        }\n      }\n\n      for (let i = 0; i < this.ingredients.length; i++) {\n        if (!ctailIng.includes(this.ingredients[i])) {\n          this.enablepump[i] = false;\n          this.pumpvals[i] = 0;\n        }\n      }\n\n      this.roundVals();\n      this.selectedCocktail = index;\n    },\n    sendCocktailReq: function () {\n      let cockName = this.cocktails[this.selectedCocktail].name.replace(/\\s+/g, \"\").toLowerCase();\n      fetch(\"http://192.168.0.129:8081/cocktails/\" + cockName, {\n        method: \"post\"\n      }).then(response => {\n        console.log(response);\n      });\n    },\n    drinkSizeChanged: function ($event) {\n      this.selectedSize = parseInt($event.target.options[$event.target.options.selectedIndex].text);\n      console.log(this.selectedSize + 2);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","pumpvals","pumpvalscopy","roundedPumpVals","enablepump","ingredients","loaded","cocktails","selectedCocktail","selectedSize","created","ingResponse","fetch","ok","json","initialVal","length","Array","fill","map","x","toFixed","alert","status","cocktailsResponse","methods","normalizeVals","index","absDiff","currPump","nActivePumps","i","DiffPerPump","Math","round","sum","sumDiff","newDiffPer","newSum","console","log","roundVals","changeCheckBox","passNewVal","passCockVal","ctail","ctailIng","forEach","ing","push","amounts","amount","reduce","a","b","j","includes","sendCocktailReq","cockName","replace","toLowerCase","method","then","response","drinkSizeChanged","$event","parseInt","target","options","selectedIndex","text"],"sourceRoot":"","sources":["/Users/mehmettasdemir/Desktop/OneDrive/Studium/SS2022/Multimediasysteme/dionysus-bartender/webapp/src/components/DionysusApp.vue"],"sourcesContent":["<template>\n  <div class=\"container\" v-if=\"loaded\">\n    <div class=\"sliders\">\n      <div>\n        <label >Choose a drink size: <br></label>\n        <select @change=\"drinkSizeChanged($event)\">\n          <option value=\"150\">150</option>\n          <option selected value=\"200\">200</option>\n          <option value=\"250\">250</option>\n        </select> ml\n      </div>\n      <div v-for=\"(ing, index) in ingredients\" :key=\"ing\">\n        {{ ing }}\n        <span>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            v-model.number=\"pumpvals[index]\"\n            @change=\"\n              normalizeVals(index);\n              roundVals();\n            \"\n          />\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            v-model.number=\"roundedPumpVals[index]\"\n            @change=\"\n              passNewVal(index);\n              normalizeVals(index);\n              roundVals();\n            \"\n          />\n        </span>\n      </div>\n    </div>\n    <div class=\"pictures\">\n      <div v-for=\"(cock, index) in cocktails\" :key=\"cock\">\n        <button @click=\"passCockVal(index)\">\n          {{ cock.name }}\n        </button>\n      </div>\n    </div>\n    <div class=\"buttons\">\n      <button @click=\"sendCocktailReq()\">MOCH MA MEI DRANGL HEAST!!!!!!</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DionysusApp\",\n  data() {\n    return {\n      pumpvals: null,\n      pumpvalscopy: null,\n      roundedPumpVals: null,\n      enablepump: null,\n      ingredients: null,\n      loaded: false,\n      cocktails: null,\n      selectedCocktail: null,\n      selectedSize: 200\n    };\n  },\n  created: async function () {\n    let ingResponse = await fetch(\"http://192.168.0.129:8081/ingredients\");\n\n    if (ingResponse.ok) {\n      this.ingredients = await ingResponse.json();\n      let initialVal = 100 / this.ingredients.length;\n      this.pumpvals = Array(this.ingredients.length).fill(initialVal);\n      this.pumpvalscopy = this.pumpvals.map((x) => x);\n      this.roundedPumpVals = this.pumpvals.map((x) => x.toFixed(0));\n      this.enablepump = Array(this.ingredients.length).fill(true);\n    } else {\n      alert(\"HTTP-Error: \" + ingResponse.status);\n      return;\n    }\n\n    let cocktailsResponse = await fetch(\"http://192.168.0.129:8081/cocktails\");\n\n    if (cocktailsResponse.ok) {\n      this.cocktails = await cocktailsResponse.json();\n    } else {\n      alert(\"HTTP-Error: \" + cocktailsResponse.status);\n      return;\n    }\n\n    this.loaded = true;\n  },\n  methods: {\n    normalizeVals: function (index) {\n      let absDiff = this.pumpvals[index] - this.pumpvalscopy[index];\n      let currPump = index;\n      let nActivePumps = 0;\n\n      if (this.pumpvals[index] > 1) {\n        this.enablepump[index] = true;\n      }\n\n      for (let i in this.enablepump) {\n        //compute num of active pumps\n        if (this.enablepump[i]) {\n          nActivePumps++;\n        }\n      }\n      let DiffPerPump = -1 * (absDiff / (nActivePumps - 1));\n\n      for (var i = 0; i < this.pumpvals.length; i++) {\n        if (this.enablepump[i] && i != index) {\n          let x = this.pumpvals[i] + Math.round(DiffPerPump);\n          if (x < 0.5) {\n            this.enablepump[i] = false;\n          } //disable pumps with val < 0.5, if x>= 0.5 it is rounded up to 1\n          this.pumpvals[i] = x <= 0 ? 0 : x;\n        }\n      }\n\n      nActivePumps = 0;\n      for (let i in this.enablepump) {\n        //compute num of the current active pumps\n        if (this.enablepump[i]) {\n          nActivePumps++;\n        }\n      }\n\n      let sum = 0;\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        //get sum of pumpvals\n        sum += this.pumpvals[i] * 1;\n      }\n\n      let sumDiff = sum - 100; // check if the new sum is bigger than 100\n      let newDiffPer = sumDiff / nActivePumps;\n\n      for (let i in this.enablepump) {\n        //subtract the diff to 100, so the sum of all vals equal to 100\n        if (this.enablepump[i]) {\n          this.pumpvals[i] -= newDiffPer;\n        }\n      }\n\n      let newSum = 0;\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        newSum += this.pumpvals[i] * 1;\n      }\n\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        //update pumpvalscopy\n        this.pumpvalscopy[i] = this.pumpvals[i];\n      }\n      console.log(this.pumpvals);\n      console.log(\"rounded: \" + this.roundedPumpVals);\n\n      console.log(\n        \"absDiff: \" +\n          absDiff +\n          \"\\ncurrPump: \" +\n          currPump +\n          \"\\nnActivePumps: \" +\n          nActivePumps +\n          \"\\nDiffPerPump: \" +\n          DiffPerPump +\n          \"\\nsum: \" +\n          sum +\n          \"\\nnewSum: \" +\n          newSum\n      );\n    },\n    roundVals: function () {\n      for (let i = 0; i < this.pumpvals.length; i++) {\n        this.roundedPumpVals[i] = this.pumpvals[i].toFixed(0);\n      }\n    },\n    changeCheckBox: function (index) {\n      this.enablepump[index] = !this.enablepump[index];\n      if (!this.enablepump[index]) {\n        this.pumpvals[index] = 0;\n      }\n    },\n    passNewVal: function (index) {\n      //pass new roundedVal to pumpvals, otherwise \"normalizeVals()\" doesnt work or new val in number input isnt updated\n      this.pumpvals[index] = this.roundedPumpVals[index];\n    },\n    passCockVal: function (index) {\n      let ctail = this.cocktails[index];\n      let ctailIng = [];\n      ctail.ingredients.forEach((ing) => {\n        ctailIng.push(ing.name);\n      });\n\n      let amounts = [];\n      ctail.ingredients.forEach((ing) => {\n        amounts.push(ing.amount);\n      });\n\n      let amount = amounts.reduce((a, b) => a + b);\n\n      for (let i = 0; i < ctail.ingredients.length; i++) {\n        for (let j = 0; j < this.ingredients.length; j++) {\n          if (ctail.ingredients[i].name == this.ingredients[j]) {\n            this.pumpvals[j] = (amounts[i] / amount) * 100;\n          }\n        }\n      }\n\n      for (let i = 0; i < this.ingredients.length; i++) {\n        if (!ctailIng.includes(this.ingredients[i])) {\n          this.enablepump[i] = false;\n          this.pumpvals[i] = 0;\n        }\n      }\n      this.roundVals();\n      this.selectedCocktail = index;\n    },\n    sendCocktailReq: function () {\n      let cockName = this.cocktails[this.selectedCocktail].name\n        .replace(/\\s+/g, \"\")\n        .toLowerCase();\n      fetch(\"http://192.168.0.129:8081/cocktails/\" + cockName, {\n        method: \"post\",\n      }).then((response) => {\n        console.log(response);\n      });\n    },\n    drinkSizeChanged: function($event){\n      this.selectedSize = parseInt($event.target.options[$event.target.options.selectedIndex].text);\n      console.log(this.selectedSize + 2)\n    }\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.container {\n  display: grid;\n  width: 100vw;\n  height: 100vh;\n  grid-auto-columns: minmax(0, 1fr);\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 85% 1fr;\n  grid-template-areas:\n    \"slider pictures\"\n    \"slider pictures\"\n    \"buttons buttons\";\n  gap: 5px;\n  padding: 5px;\n  box-sizing: border-box;\n}\n.sliders {\n  grid-area: slider;\n  background-color: powderblue;\n  font-size: 0.7em;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: flex-start;\n  padding: 0.4em;\n  gap: 0.3em;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n}\n.sliders input[type=\"number\"] {\n  width: 2.5em;\n}\n.pictures {\n  grid-area: pictures;\n}\n.buttons {\n  grid-area: buttons;\n  background-color: green;\n}\n.container div {\n  font-size: 0.7em;\n  padding: 0.1em;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}